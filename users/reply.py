from aiogram.utils.keyboard import KeyboardButton, ReplyKeyboardBuilder, ReplyKeyboardMarkup

from database.queries import *

from dotenv import dotenv_values
import os

dotenv = dotenv_values(os.path.join(os.path.dirname(os.path.dirname(__file__)), '.env'))

SYSTEM_ADMINS = [int(dotenv['ADMIN_ID_1']), int(dotenv['ADMIN_ID_2']), int(dotenv['ADMIN_ID_3'])]


async def main_keyboard(user_id):
    builder = ReplyKeyboardBuilder()

    builder.row(KeyboardButton(text='‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã'))
    builder.row(KeyboardButton(text='üìÉ –û –Ω–∞—Å'), KeyboardButton(text='üìû –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã'))
    builder.row(KeyboardButton(text='üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å'))

    if user_id in [admin[1] for admin in await get_all_admins()] + SYSTEM_ADMINS:
        builder.row(KeyboardButton(text='üîê –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å'))

    return builder.as_markup(resize_keyboard=True)


async def questions_categories_keyboard():
    builder = ReplyKeyboardBuilder()
    data = await get_all_categories()

    [builder.row(KeyboardButton(text=question[1])) for question in data]
    builder.row(KeyboardButton(text='üôã‚Äç‚ôÇÔ∏è –ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å'))
    builder.row(KeyboardButton(text='‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))

    return builder.as_markup(resize_keyboard=True)


async def categories_questions_keyboard(category_id):
    builder = ReplyKeyboardBuilder()
    data = await get_questions_by_category(category_id)

    [builder.row(KeyboardButton(text=question[0])) for question in data]

    builder.row(KeyboardButton(text='üôã‚Äç‚ôÇÔ∏è –ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å'))
    builder.row(KeyboardButton(text='‚¨ÖÔ∏è –ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º'))

    return builder.as_markup(resize_keyboard=True)


async def admins_categories_questions_keyboard(category_id):
    builder = ReplyKeyboardBuilder()
    data = await get_questions_by_category(category_id)

    [builder.row(KeyboardButton(text=question[0])) for question in data]

    builder.row(KeyboardButton(text='‚¨ÖÔ∏è –ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º'))

    return builder.as_markup(resize_keyboard=True)


def contact_number():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text='üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º', request_contact=True)]
        ], resize_keyboard=True, one_time_keyboard=True
    )
    return keyboard