from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton, InlineKeyboardMarkup

from database.queries import *


def manage_question(question_id):
    builder = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data=f'question_edit_{question_id}')],
            [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç', callback_data=f'answer_edit_{question_id}')],
            [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data=f'change_question_cat_{question_id}')],
            [InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å ‚ùå', callback_data=f'question_delete_{question_id}')],
        ]
    )
    return builder


async def category_management(category_id):
    builder = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data=f'add_a_question_{category_id}')],
            [InlineKeyboardButton(text='üõ† –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data=f'category_edit_{category_id}')],
            [InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data=f'category_delete_{category_id}')],
        ]
    )
    return builder


async def manage_social_media():
    builder = InlineKeyboardBuilder()

    [builder.row(InlineKeyboardButton(text=data[1], callback_data=f'edit_social_media_{data[0]}')) for data in await get_social_media()]

    builder.row(InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å', callback_data=f'add_social_media'))

    return builder.as_markup()


async def manage_single_sm(link, sm_id):
    builder = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='‚ñ∂Ô∏è –°—Å—ã–ª–∫–∞', url=link)],
            [InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data=f'sm_delete_{sm_id}')],
            [InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'back_to_social_media')],
        ]
    )
    return builder


async def delete_confirm(item_id):
    builder = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–ü–û–î–¢–í–ï–†–î–ò–¢–¨', callback_data=f'deleteconfirm_{item_id}')],
            [InlineKeyboardButton(text='‚ùå–û–¢–ú–ï–ù–ò–¢–¨‚ùå', callback_data=f'categories')],
        ]
    )
    return builder


def client_delete_confirm(item_id):
    builder = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–ü–û–î–¢–í–ï–†–î–ò–¢–¨', callback_data=f'client_delete_{item_id}')],
            [InlineKeyboardButton(text='‚ùå–û–¢–ú–ï–ù–ò–¢–¨‚ùå', callback_data=f'client_cancelled_{item_id}')],
        ]
    )
    return builder


async def categories_selection():
    builder = InlineKeyboardBuilder()
    data = await get_all_categories()

    [builder.row(InlineKeyboardButton(text=question[1], callback_data=f"category_{question[0]}")) for question in data]

    builder.row(InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ ‚ùå', callback_data=f"categories_cancel"))

    return builder.as_markup()


def admin_answer(sender_id):
    button = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–û—Ç–≤–µ—Ç–∏—Ç—å',
                                                                         callback_data=f"answer_to_{sender_id}")]])

    return button


async def admins_manage():
    keyboard = InlineKeyboardBuilder()

    [keyboard.row(InlineKeyboardButton(text=f'{worker[2]}', callback_data=f'manage_an_admin_{worker[0]}')) for worker in await get_all_admins()]

    keyboard.row(InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞', callback_data='add_a_worker'))

    return keyboard.as_markup()


def manage_an_admin(admin_id):
    keyboard = InlineKeyboardBuilder()

    keyboard.row(InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞', callback_data=f'delete_an_admin_{admin_id}'))
    keyboard.row(InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'staff'))

    return keyboard.as_markup()


def delete_client(client_id):
    keyboard = InlineKeyboardBuilder()

    keyboard.row(InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞', callback_data=f'delete_a_client_{client_id}'))

    return keyboard.as_markup()